import { Request, Response } from "express";

//import {AWSTranscriptionInformationInterface, TranscriptInterface} from "@src/interfaces";
//import { TranscriptionInformationService } from "@src/services";
//import { JobStatusEnumEnum, SentimentEnum } from "@src/enums";


export class UserController {
    static async createUser(req: Request, res: Response): Promise<Response> {
        const key: string = `lambda/${req.body.jobKeyName}.json`,
            object = await AwsS3.getObject(key),
            transcription: AWSTranscriptionInformationInterface = JSON.parse(await object.Body!.transformToString()),
            callSummary = transcription.ConversationCharacteristics.ContactSummary?.AutoGenerated?.OverallSummary.Content,
            transcript = transcription.Transcript;

        const transcribedDataExists = await new TranscriptionInformationService().findOne({ jobKeyName: req.body.jobKeyName }),
            transcribedData = await new TranscriptionInformationService().updateOne({
                id: transcribedDataExists.id,
                input: {
                    targetLanguageCode: transcription.LanguageCode,
                    sentiment: sentiment as SentimentEnum
                }
            });

        return res.status(200).json({
            success: true,
            code: 200,
            message: "User created successfully."
        });
    }


}